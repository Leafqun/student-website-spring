<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zjut.edu.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="cn.zjut.edu.dto.Course">
    <id column="courseId" jdbcType="INTEGER" property="courseId" />
    <result column="courseName" jdbcType="VARCHAR" property="courseName" />
    <result column="enName" jdbcType="VARCHAR" property="enName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="cn.zjut.edu.dto.CourseWithBLOBs">
    <result column="courseArr" jdbcType="LONGVARCHAR" property="courseArr" />
    <result column="courseSchedule" jdbcType="LONGVARCHAR" property="courseSchedule" />
  </resultMap>
  <sql id="Base_Column_List">
    courseId, courseName, enName
  </sql>
  <sql id="Blob_Column_List">
    courseArr, courseSchedule
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from course
    where courseId = #{courseId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course
    where courseId = #{courseId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.zjut.edu.dto.CourseWithBLOBs">
    insert into course (courseId, courseName, enName, 
      courseArr, courseSchedule)
    values (#{courseId,jdbcType=INTEGER}, #{courseName,jdbcType=VARCHAR}, #{enName,jdbcType=VARCHAR}, 
      #{courseArr,jdbcType=LONGVARCHAR}, #{courseSchedule,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.zjut.edu.dto.CourseWithBLOBs">
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        courseId,
      </if>
      <if test="courseName != null">
        courseName,
      </if>
      <if test="enName != null">
        enName,
      </if>
      <if test="courseArr != null">
        courseArr,
      </if>
      <if test="courseSchedule != null">
        courseSchedule,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="courseName != null">
        #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="courseArr != null">
        #{courseArr,jdbcType=LONGVARCHAR},
      </if>
      <if test="courseSchedule != null">
        #{courseSchedule,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.zjut.edu.dto.CourseWithBLOBs">
    update course
    <set>
      <if test="courseName != null">
        courseName = #{courseName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        enName = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="courseArr != null">
        courseArr = #{courseArr,jdbcType=LONGVARCHAR},
      </if>
      <if test="courseSchedule != null">
        courseSchedule = #{courseSchedule,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where courseId = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.zjut.edu.dto.CourseWithBLOBs">
    update course
    set courseName = #{courseName,jdbcType=VARCHAR},
      enName = #{enName,jdbcType=VARCHAR},
      courseArr = #{courseArr,jdbcType=LONGVARCHAR},
      courseSchedule = #{courseSchedule,jdbcType=LONGVARCHAR}
    where courseId = #{courseId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.zjut.edu.dto.Course">
    update course
    set courseName = #{courseName,jdbcType=VARCHAR},
      enName = #{enName,jdbcType=VARCHAR}
    where courseId = #{courseId,jdbcType=INTEGER}
  </update>
</mapper>